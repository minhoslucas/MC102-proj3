questions:
  - question: O que e Python?
    choices:
      - Uma linguagem de programacao de alto nivel, interpretada e de proposito geral.
      - Um sistema operacional.
      - Um compilador de codigo.
      - Uma biblioteca para matematica computacional.
    answer: Uma linguagem de programacao de alto nivel, interpretada e de proposito geral.
    difficulty: 1

  - question: Qual e o operador utilizado em Python para realizar uma divisao inteira?
    choices:
      - /
      - "%"
      - //
      - "*"
    answer: //
    difficulty: 1

  - question: Como se verifica se um valor esta presente em uma lista em Python?
    choices:
      - exists
      - in_list
      - contains
      - in
    answer: in
    difficulty: 1

  - question: Qual a estrutura de controle utilizada para decisoes em Python?
    choices:
      - switch
      - if-elif-else
      - decision
      - case
    answer: if-elif-else
    difficulty: 1

  - question: Qual a funcao utilizada para retornar o tamanho de uma lista em Python?
    choices:
      - size()
      - count()
      - length()
      - len()
    answer: len()
    difficulty: 1

  - question: Como se realiza a concatenacao de strings em Python?
    choices:
      - concat()
      - plus()
      - concatenate()
      - +
    answer: +
    difficulty: 1

  - question: Qual a diferença entre '=' e '==' em Python?
    choices:
      - "'=' e o operador de comparacao, enquanto '==' e o operador de atribuicao."
      - "'=' e o operador de adicao, enquanto '==' e o operador de igualdade."
      - "'=' e o operador de atribuicao, enquanto '==' e o operador de comparacao."
      - "'=' e '==' sao operadores equivalentes em Python."
    answer: "'=' e o operador de atribuicao, enquanto '==' e o operador de comparacao."
    difficulty: 1

  - question: Que funcao retorna tanto o item quanto o index de um elemento em uma lista?
    choices:
      - enumerate()
      - range()
      - len()
      - index()
    answer: enumerate()
    difficulty: 1

  - question: Qual e o metodo utilizado para ordenar uma lista em Python?
    choices:
      - organize()
      - order()
      - sorted()
      - arrange()
    answer: sorted()
    difficulty: 1

  - question: Qual a estrutura de dados utilizada para mapeamentos em Python?
    choices:
      - list
      - map
      - dictionary (dict)
      - set
    answer: dictionary (dict).
    difficulty: 1

  - question: Como se importa um modulo em Python?
    choices:
      - include
      - require
      - import
      - use
    answer: import
    difficulty: 1

  - question: Qual a funcao utilizada para gerar um número inteiro aleatorio em Python?
    choices:
      - random()
      - randint()
      - randrange()
      - random_int()
    answer: randint()
    difficulty: 1

  - question: Como se verifica se um elemento esta presente em um conjunto (set) em Python?
    choices:
      - exists_in_set()
      - in_set()
      - contains()
      - in
    answer: in
    difficulty: 1

  - question: Qual a funcao utilizada para converter um número em uma string em Python?
    choices:
      - to_str()
      - str()
      - convert_str()
      - stringify()
    answer: str()
    difficulty: 1

  - question: Qual a maneira correta de comentar uma linha em Python?
    choices:
      - // Comentario
      - /* Comentario */
      - '# Comentario'
      - -- Comentario
    answer: '# Comentario'
    difficulty: 1

  - question: Como se remove o último elemento de uma lista em Python?
    choices:
      - pop()
      - remove_last()
      - delete()
      - del
    answer: pop()
    difficulty: 1

  - question: Qual a funcao usada para encontrar o valor maximo em uma lista em Python?
    choices:
      - max()
      - maximum()
      - find_max()
      - peak()
    answer: max()
    difficulty: 1

  - question: Como se cria uma lista vazia em Python?
    choices:
      - "'[]' ou list()"
      - create_list()
      - empty_list()
      - new_list()
    answer: "'[]'"
    difficulty: 1

  - question: Qual a funcao utilizada para converter uma string em letras minúsculas em Python?
    choices:
      - lower()
      - to_lower()
      - lowercase()
      - str_lower()
    answer: lower()
    difficulty: 1

  - question: Como se verifica o tipo de uma variavel em Python?
    choices:
      - check_type()
      - type_of()
      - typeof()
      - type()
    answer: type()
    difficulty: 1

  - question: Qual a funcao utilizada para encontrar o valor minimo em uma lista em Python?
    choices:
      - min()
      - minimum()
      - find_min()
      - bottom()
    answer: min()
    difficulty: 1

  - question: Como se cria um conjunto (set) vazio em Python?
    choices:
      - "'{}'"
      - set()
      - new_set()
      - empty_set()
    answer: set()
    difficulty: 1

  - question: Qual a funcao utilizada para converter um número em uma string em Python?
    choices:
      - to_str()
      - str()
      - convert_str()
      - stringify()
    answer: str()
    difficulty: 1

  - question: Qual a maneira correta de comentar uma linha em Python?
    choices:
      - // Comentario
      - /* Comentario */
      - '# Comentario'
      - -- Comentario
    answer: '# Comentario'
    difficulty: 1

  - question: Como se remove o último elemento de uma lista em Python?
    choices:
      - pop()
      - remove_last()
      - delete()
      - del
    answer: pop()
    difficulty: 1

  - question: Qual a funcao usada para encontrar o valor maximo em uma lista em Python?
    choices:
      - max()
      - maximum()
      - find_max()
      - peak()
    answer: max()
    difficulty: 1

  - question: Como se cria uma lista vazia em Python?
    choices:
      - "'[]' ou list()"
      - create_list()
      - empty_list()
      - new_list()
    answer: "'[]' ou list()"
    difficulty: 1

  - question: Qual e a funcao utilizada para calcular o comprimento de uma string em Python?
    choices:
      - len()
      - length()
      - size()
      - count()
    answer: len()
    difficulty: 2

  - question: Como se verifica se uma chave existe em um dicionario em Python?
    choices:
      - check_key()
      - key_exists()
      - exists_key()
      - in
    answer: in
    difficulty: 2

  - question: Qual a funcao utilizada para dividir uma string em uma lista de substrings em Python?
    choices:
      - split()
      - divide()
      - explode()
      - substring()
    answer: split()
    difficulty: 2

  - question: Como se realiza a copia de uma lista em Python?
    choices:
      - copy()
      - copy_list()
      - list_clone()
      - clone()
    answer: copy()
    difficulty: 2

  - question: Qual e a diferença entre metodos e funçoes em Python?
    choices:
      - Metodos pertencem a objetos, enquanto funçoes nao.
      - Funçoes pertencem a objetos, enquanto metodos nao.
      - Metodos sao definidos fora de classes, enquanto funçoes sao definidas dentro.
      - Nao ha diferença entre metodos e funçoes em Python.
    answer: Metodos pertencem a objetos, enquanto funçoes nao.
    difficulty: 2

  - question: Como se converte uma lista em uma tupla em Python?
    choices:
      - tuple()
      - list_to_tuple()
      - convert_to_tuple()
      - to_tuple()
    answer: tuple()
    difficulty: 2

  - question: Qual e o metodo utilizado para adicionar um elemento no final de uma lista em Python?
    choices:
      - add()
      - insert()
      - append()
      - push()
    answer: append()
    difficulty: 2

  - question: Como se verifica se um número e par em Python?
    choices:
      - is_even()
      - even()
      - num%2 == 0
      - is_par()
    answer: num%2 == 0
    difficulty: 2

  - question: Qual a funcao utilizada para converter um número em uma string formatada em Python?
    choices:
      - format_str()
      - str_format()
      - format()
      - to_str()
    answer: format()
    difficulty: 2

  - question: Como se remove um elemento especifico de uma lista em Python?
    choices:
      - remove()
      - delete()
      - pop()
      - discard()
    answer: remove()
    difficulty: 2

  - question: Qual e o operador utilizado para concatenar listas em Python?
    choices:
      - concat()
      - join()
      - extend()
      - merge()
    answer: extend()
    difficulty: 2

  - question: Qual a maneira correta de verificar se um número e negativo em Python?
    choices:
      - is_negative()
      - < 0
      - negative()
      - is_neg()
    answer: < 0
    difficulty: 2

  - question: Como se verifica se um valor e verdadeiro em Python?
    choices:
      - true()
      - is_true()
      - is_true_value()
      - bool()
    answer: bool()
    difficulty: 2

  - question: Qual a funcao utilizada para encontrar a posicao de um elemento em uma lista em Python?
    choices:
      - find_index()
      - index()
      - get_index()
      - position()
    answer: index()
    difficulty: 2

  - question: Como se realiza a uniao de dois conjuntos (sets) em Python?
    choices:
      - union()
      - combine()
      - join()
      - merge()
    answer: union()
    difficulty: 2

  - question: Qual a maneira correta de arredondar um número em Python?
    choices:
      - round()
      - math.round()
      - arredonda()
      - ceil()
    answer: round()
    difficulty: 2

  - question: Como se itera sobre os indices e elementos de uma lista em Python?
    choices:
      - for i in range(len(list))
      - for i, item in enumerate(list)
      - for i, item in list
      - for item in list
    answer: for i, item in enumerate(list)
    difficulty: 2

  - question: Qual e o metodo utilizado para remover um elemento de um conjunto (set) em Python?
    choices:
      - remove()
      - delete()
      - discard()
      - pop()
    answer: discard()
    difficulty: 2

  - question: Como se converte uma string em letras maiúsculas em Python?
    choices:
      - to_upper()
      - uppercase()
      - upper()
      - str_upper()
    answer: upper()
    difficulty: 2

  - question: Qual e o metodo utilizado para contar o número de ocorrências de um elemento em uma lista em Python?
    choices:
      - count()
      - occurrences()
      - find()
      - search()
    answer: count()
    difficulty: 2

  - question: Como se verifica se uma string começa com determinado prefixo em Python?
    choices:
      - startswith()
      - beginswith()
      - prefix()
      - starts()
    answer: startswith()
    difficulty: 2

  - question: Qual a funcao utilizada para obter o valor absoluto de um número em Python?
    choices:
      - abs()
      - absolute()
      - value()
      - get_abs()
    answer: abs()
    difficulty: 2

  - question: Como se converte uma lista de strings em uma única string concatenada em Python?
    choices:
      - concat_strings()
      - join()
      - concatenate()
      - merge()
    answer: join()
    difficulty: 2

  - question: Qual e o metodo utilizado para verificar se um objeto e uma instância de uma determinada classe em Python?
    choices:
      - is_instance()
      - instance_of()
      - type_of()
      - isinstance()
    answer: isinstance()
    difficulty: 2

  - question: Como se ordena uma lista em ordem decrescente em Python?
    choices:
      - sort(reverse=True)
      - sort(descending=True)
      - reverse_sort()
      - sort_desc()
    answer: sort(reverse=True)
    difficulty: 2

  - question: Qual a funcao utilizada para remover espaços em branco no inicio e no final de uma string em Python?
    choices:
      - strip()
      - trim()
      - clean()
      - remove_whitespace()
    answer: strip()
    difficulty: 2

  - question: Como se obtem o último elemento de uma lista em Python?
    choices:
      - last()
      - get_last()
      - list[-1]
      - last_element()
    answer: list[-1]
    difficulty: 2

  - question: Qual e a diferença entre uma funcao lambda e uma funcao definida com 'def' em Python?
    choices:
      - Funçoes lambda sao mais eficientes em termos de tempo de execucao.
      - Funçoes definidas com 'def' podem conter múltiplas expressoes.
      - Funçoes lambda sao funçoes anônimas e podem ter apenas uma expressao.
      - Funçoes lambda nao podem ser atribuidas a variaveis.
    answer: Funçoes lambda sao funçoes anônimas e podem ter apenas uma expressao.
    difficulty: 3

  - question: Como se realiza a leitura de um arquivo linha por linha em Python?
    choices:
      - readlines()
      - read_lines()
      - read_file_lines()
      - get_lines()
    answer: readlines()
    difficulty: 3

  - question: Qual e a forma correta de lidar com exceçoes em Python?
    choices:
      - Usando declaraçoes 'try' e 'finally' apenas.
      - Capturando todas as exceçoes possiveis usando 'except Exception'.
      - Capturando exceçoes especificas e tratando-as de forma apropriada.
      - Ignorando exceçoes para evitar interrupçoes no programa.
    answer: Capturando exceçoes especificas e tratando-as de forma apropriada.
    difficulty: 3

  - question: Como se define um gerador em Python?
    choices:
      - Com a palavra-chave 'generator'.
      - Usando a funcao 'generator()'.
      - Com a palavra-chave 'def' e utilizando 'yield' em vez de 'return'.
      - Definindo uma classe especial 'Generator'.
    answer: Com a palavra-chave 'def' e utilizando 'yield' em vez de 'return'.
    difficulty: 3

  - question: Qual e o metodo utilizado para ordenar uma lista em Python em ordem reversa?
    choices:
      - sort(reverse=True)
      - sort_desc()
      - reverse_sort()
      - sort(reverse)
    answer: sort(reverse=True)
    difficulty: 3

  - question: Como se cria uma matriz (array bidimensional) em Python?
    choices:
      - Utilizando a biblioteca numpy.
      - Usando listas aninhadas ou listas de listas.
      - Com a palavra-chave 'array'.
      - Nao e possivel criar matrizes em Python.
    answer: Usando listas aninhadas ou listas de listas.
    difficulty: 3

  - question: Qual e a diferença entre uma lista e um conjunto (set) em Python?
    choices:
      - Listas sao ordenadas e permitem elementos duplicados, enquanto conjuntos nao sao ordenados e nao permitem elementos duplicados.
      - Listas sao mais eficientes em termos de memoria do que conjuntos.
      - Conjuntos sao ordenados e permitem elementos duplicados, enquanto listas nao sao ordenadas e nao permitem elementos duplicados.
      - Nao ha diferença significativa entre listas e conjuntos em Python.
    answer: Listas sao ordenadas e permitem elementos duplicados, enquanto conjuntos nao sao ordenados e nao permitem elementos duplicados.
    difficulty: 3

  - question: Como se converte uma lista de strings em uma lista de números inteiros em Python?
    choices:
      - convert_to_integers()
      - int_list()
      - map(int, list)
      - to_int()
    answer: map(int, list)
    difficulty: 3

  - question: Qual e a funcao utilizada para encontrar o indice de um elemento em uma lista em Python?
    choices:
      - find_index()
      - index()
      - get_index()
      - search_index()
    answer: index()
    difficulty: 3

  - question: Como se realiza a iteracao sobre as chaves e valores de um dicionario em Python?
    choices:
      - for key, value in dict.items()
      - for key, value in enumerate(dict)
      - for key in dict.keys() e for value in dict.values()
      - for key, value in dict.items()
    answer: for key, value in dict.items()
    difficulty: 3

  - question: Qual e a funcao utilizada para escrever em um arquivo em Python?
    choices:
      - write_file()
      - file_write()
      - write()
      - save_file()
    answer: write()
    difficulty: 3

  - question: Como se obtem a data atual em Python?
    choices:
      - current_date()
      - now()
      - datetime.now()
      - today()
    answer: datetime.now()
    difficulty: 3

  - question: Qual e o metodo utilizado para remover todos os elementos de um conjunto (set) em Python?
    choices:
      - clear()
      - delete_all()
      - remove_all()
      - discard_all()
    answer: clear()
    difficulty: 3

  - question: Como se obtem o diretorio atual de trabalho em Python?
    choices:
      - getcwd()
      - current_dir()
      - dir()
      - pwd()
    answer: getcwd()
    difficulty: 3

  - question: Qual e o metodo utilizado para encontrar a posicao de um caractere ou substring em uma string em Python?
    choices:
      - position()
      - find()
      - index()
      - search()
    answer: find()
    difficulty: 3

  - question: Como se realiza a ordenacao de uma lista de dicionarios em Python com base em um valor especifico de cada dicionario?
    choices:
      - sort_by_value()
      - sort()
      - sort(lambda x:* x['key'])
      - sorted()
    answer: sorted()
    difficulty: 3

  - question: Qual e a funcao utilizada para abrir um arquivo em modo de leitura em Python?
    choices:
      - open_file('r')
      - read_file()
      - open('r')
      - file_open('r')
    answer: open('r')
    difficulty: 3

  - question: Como se verifica se um arquivo e executavel em Python?
    choices:
      - is_executable()
      - check_executable()
      - os.access(file, os.X_OK)
      - file_executable()
    answer: os.access(file, os.X_OK)
    difficulty: 3

  - question: Qual e o metodo utilizado para remover um elemento de uma lista sem gerar uma excecao se o elemento nao estiver presente?
    choices:
      - delete()
      - remove()
      - discard()
      - pop()
    answer: pop()
    difficulty: 3

  - question: Como se inverte a ordem dos elementos em uma lista em Python?
    choices:
      - invert()
      - reverse()
      - sort(reverse=True)
      - flip()
    answer: reverse()
    difficulty: 3

  - question: Qual e a funcao utilizada para calcular a potência de um número em Python?
    choices:
      - power()
      - pow()
      - calculate_power()
      - exp()
    answer: pow()
    difficulty: 3

  - question: Como se converte um número inteiro em uma representacao binaria em Python?
    choices:
      - bin()
      - to_binary()
      - convert_to_binary()
      - binary()
    answer: bin()
    difficulty: 3

  - question: Qual e a funcao utilizada para ler o conteúdo completo de um arquivo em Python?
    choices:
      - read_all()
      - read_file()
      - readlines()
      - read()
    answer: read()
    difficulty: 3

  - question: Como se converte uma string em uma lista de caracteres em Python?
    choices:
      - split()
      - list(str)
      - to_list()
      - chars()
    answer: list(str)
    difficulty: 3

  - question: Qual e o metodo utilizado para encontrar a posicao de um elemento em uma lista em Python?
    choices:
      - find_index()
      - index()
      - get_index()
      - search_index()
    answer: index()
    difficulty: 3

  - question: Como se realiza a iteracao sobre as chaves e valores (ao mesmo tempo) de um dicionario em Python?
    choices:
      - for key, value in dict.items()
      - for key, value in enumerate(dict)
      - for key in dict.keys() e for value in dict.values()
      - for key, value in dict.items()
    answer: for key, value in dict.items()
    difficulty: 3